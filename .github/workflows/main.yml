name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "getip-flask-application"
  EB_APPLICATION_NAME       : "Getip"
  EB_ENVIRONMENT_NAME       : "Getip-env"
  DEPLOY_PACKAGE_NAME       : "getip_flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-west-2"

on:
  push:
    branches:
      - main

jobs:
  ci_part:
    runs-on: ubuntu-latest

    steps:
    - name: git clone our repo
      uses: actions/checkout@v3

    - name: Create ZIP deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
     
     
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region           : ${{ env.AWS_REGION_NAME }}
      
    - name: Copy Deployment package to S3 bucket
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
      
    - name: Print the CI jobs success message
      run : echo "CI pipeline part finished successfully!"
      
  cd_part:
    runs-on: ubuntu-latest
    needs: [ci_part]
    
    
    steps:
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region           : ${{ env.AWS_REGION_NAME }}
        
    - name: Create new ElasticBeanstalk Application Version
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CoimmitSHA-${{ github.sha }}"
        
    - name: Deploy new ElasticBeanstalk Application Version
      run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
      
    - name: Print the CD jobs success message
      run : echo "CD pipeline part finished successfully!"      
